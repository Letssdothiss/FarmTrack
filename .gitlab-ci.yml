stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2

# Cache dependencies between jobs
cache:
  paths:
    - packages/frontend/node_modules/
    - packages/backend/node_modules/

# Build frontend
build-frontend:
  stage: build
  image: node:20-alpine
  script:
    - cd packages/frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - packages/frontend/dist/

# Build backend
build-backend:
  stage: build
  image: node:20-alpine
  script:
    - cd packages/backend
    - npm install
    - npm run build
  artifacts:
    paths:
      - packages/backend/dist/

# Test Docker build
test-docker-build:
  stage: test
  image: docker:latest
  services:
    - name: docker:dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache curl
    - curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    - chmod +x /usr/local/bin/docker-compose
  script:
    - docker-compose -f docker-compose.production.yml build
  only:
    - main

# Deploy to production
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" | base64 -d >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$SSH_HOST "cd /var/www/farmtrack && git pull origin main && docker compose -f docker-compose.production.yml up --build -d"
  only:
    - main
  when: manual 